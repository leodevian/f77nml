[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.4",
  "hatchling>=1.27",
]

[project]
name = "f77nml"
description = "A Python package for FORTRAN 77 NAMELIST I/O"
readme = "README.md"
license = "MIT"
license-files = [
  "LICENSE",
]
maintainers = [
  { name = "Léo Bernard", email = "leodevian.gh@gmail.com" },
]
authors = [
  { name = "Léo Bernard", email = "leodevian.gh@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: Implementation :: CPython",
  "Typing :: Typed",
]
dynamic = [
  "version",
]
dependencies = [  ]
urls.Changelog = "https://github.com/leodevian/f77nml/blob/main/CHANGELOG.md"
urls.Homepage = "https://github.com/leodevian/f77nml"
urls.Issues = "https://github.com/leodevian/f77nml/issues"
urls.Repository = "https://github.com/leodevian/f77nml"

[dependency-groups]
dev = [
  { include-group = "lint" },
  { include-group = "release" },
  { include-group = "test" },
  { include-group = "type" },
]
test = [
  "coverage>=7.11",
  "pytest>=8.3.4",
  "pytest-xdist>=3.6.1",
]
type = [
  "mypy>=1.15",
  { include-group = "test" },
]
lint = [
  "pre-commit>=4.2",
]
release = [
  "towncrier>=24.8",
]

[tool.hatch]
build.hooks.vcs.version-file = "src/f77nml/VERSION.txt"
version.fallback-version = "0.0.0"
version.source = "vcs"
version.raw-options.local_scheme = "no-local-version"

[tool.ruff]
lint.select = [
  "ALL",
]
lint.ignore = [
  "COM812", # conflicts with formatter
  "ISC001", # conflicts with formatter
]
lint.per-file-ignores."tests/**" = [
  "S101", # using assert is okay in tests
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"
lint.future-annotations = true

[tool.codespell]
write-changes = true

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
  "-ra",
  "--showlocals",
  "--strict-config",
  "--strict-markers",
]
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]
xfail_strict = true

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".nox/**/site-packages",
]
report.exclude_also = [
  "-> [\"']?(Never|NoReturn)[\"']?:",
  "^\\s*(typing\\.)?assert_never\\b",
  "^\\s*@(abc\\.)?abstractmethod\\b",
  "^\\s*@(typing\\.)?overload\\b",
  "^\\s*if (typing\\.)?TYPE_CHECKING:",
  "^\\s*if False:",
  "^\\s*raise NotImplementedError\\b",
  "^\\s*return NotImplemented\\b",
  "^if __name__ == [\"']__main__[\"']:$",
]
report.fail_under = 100
report.show_missing = true
report.skip_covered = true
run.branch = true
run.disable_warnings = [
  "module-not-imported",
]
run.dynamic_context = "test_function"
run.omit = [
  "__main__.py",
  "setup.py",
]
run.patch = [
  "subprocess",
]
run.source_dirs = [
  "tests",
]
run.source_pkgs = [
  "f77nml",
]

[tool.towncrier]
name = "f77nml"
filename = "CHANGELOG.md"
directory = "changelog.d"
start_string = "<!-- towncrier release notes start -->\n"
underlines = [ "", "", "" ]
title_format = "## [{version}](https://github.com/leodevian/f77nml/tree/v{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/leodevian/f77nml/issues/{issue})"

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[tool.mypy]
python_version = "3.10"
warn_unreachable = true
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
strict = true
pretty = true
